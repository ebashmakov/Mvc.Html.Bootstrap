@using Mvc.Html.Bootstrap
@model Mvc.Bootstrap.Web.Models.LoginModel

@{
    ViewBag.Title = "Log in";
}

<div class="span6">
    <h2>Use a local account to log in.</h2>
@*@using (Html.BeginForm(new { ReturnUrl = ViewBag.ReturnUrl },)) {*@
@using (Html.BeginForm("Login","Account",FormMethod.Post,new {@class="form-horizontal"})) {    
    @Html.AntiForgeryToken()
    @Html.BootstrapValidationSummary("Please fix the following errors.");
    <legend>Log in Form</legend>
    <div class="control-group">
        @Html.LabelFor(m => m.UserName, new {@class = "control-label" })
        <div class="controls">
        @Html.TextBoxFor(m => m.UserName, new { placeholder = "Email" })
        @Html.ValidationMessageFor(m => m.UserName)
        </div>
    </div>    
    <div class="control-group">
        @Html.LabelFor(m => m.Password, new {@class = "control-label" })
        <div class="controls">
        @Html.TextBoxFor(m => m.Password, new { placeholder = "Password" })
        @Html.ValidationMessageFor(m => m.Password)
        </div>
    </div>    
    <div class="control-group highlight-none">
        <div class="controls">
            <label class="checkbox">  Remember me
                @Html.CheckBoxFor(m => m.RememberMe)
            </label>
        </div>
    </div>    
    <div class="form-actions">
        <input class="btn" type="submit" value="Log in" />
    </div>
    <p>@Html.ActionLink("Register", "Register") if you don't have an account.</p>
}
</div><!--/span-->

<div class="span6" id="socialLoginForm">
    <h2>Use another service to log in.</h2>
    @Html.Action("ExternalLoginsList", new { ReturnUrl = ViewBag.ReturnUrl })
</div><!--/span-->

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">

        (function () {
            var highlight = $.validator.defaults.highlight;
            var unhighlight = $.validator.defaults.unhighlight;

            $.validator.setDefaults({
                highlight: function (element, errorClass, validClass) {
                    $(element).parents('.control-group').each(function () {
                        var $this = $(this);
                        if (!$this.hasClass('highlight-none')) {
                            $this.removeClass('success')
                                 .addClass('error');
                        }
                    });
                    highlight(element, errorClass, validClass);
                },
                unhighlight: function (element, errorClass, validClass) {
                    $(element).parents('.control-group').each(function () {
                        var $this = $(this);
                        if (!$this.hasClass('highlight-none')) {
                            $this.removeClass('error')
                                 .addClass('success');
                        }
                    });
                    unhighlight(element, errorClass, validClass);
                }
            });
        })();

        $(document).ready(function () {

            $('span.field-validation-valid, span.field-validation-error').each(function () {
                $(this).addClass('help-inline');
            });

            $('form').each(function () {
                $(this).find('div.control-group').each(function () {
                    if ($(this).find('span.field-validation-error').length > 0) {
                        $(this).addClass('error');
                    }
                });
            });

        });

    </script>
}
